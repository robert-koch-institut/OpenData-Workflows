name: OpenData Workflow for and Metadata management

# Controls when the action will run. 
on:
  workflow_call:
    inputs:
      ZENODOJSON_PATH:
         description: path to zenodo.json inside the repo
         type: string
         required: false
         default: Metadaten/zenodo.json
      OPENCODE_ACTIVE:
        description: true, if the repo should be synced with Open Code
        type: boolean
        required: false
        default: false
      OPENCODE_GROUPID:
        description: ID of the group at OpenCode to publish the repo
        type: string
        required: false
        default: 2781
      OPENCODE_ACCESS_USER:
        description: Name of the user at OpenCode to publish the repo
        type: string
        required: false
        default: RKIOpenData
      OPENCODE_BRANCH:
         description: base branch to use for OpenCoDE push 
         type: string
         default: "main"      
      GOVDATA_ACTIVE:
        description: true, if metadata should be pushed to a govdata repo
        type: boolean
        required: false
        default: false
      GOVDATA_DESTINATION_REPO:
        description: destination where the govdata.ttl will be pushed to
        type: string
        required: false
        default: knutator/Metadaten_Test
      NFDI4HEALTH_ACTIVE:
        description: true, if metadata should be pushed to NFDI4Health
        type: boolean
        required: false
        default: false
      NFDI4HEALTH_METADATA_PATH:
        description: path where the metadata for nfdi4health is stored
        type: string
        default: Metadaten/nfdi4health.json
      NFDI4HEALTH_AUTHORIZATION_ENDPOINT:
        description: endpoint for nfdi4health to get tokens from
        type: string
        default: "https://sso.studyhub.nfdi4health.de/realms/nfdi4health/protocol/openid-connect/token"
      NFDI4HEALTH_BASE_URL:
        description: base url for all nfdi4 health requests
        type: string
        default: "https://health-study-hub.de/api/"
      NFDI4HEALTH_BASE_BRANCH:
        description: base branch to use to add modifications to the nfdi4health.json
        type: string
        default: "main"
      WEBSITE_ACTIVE:
        description: true, if the website should be built
        type: boolean
        default: false     
      GITHUB_DETAILS_ACTIVE:
        description: true, if the tags should be copies to the Github repo as topics
        type: boolean
        default: true

    secrets:
      GOVDATA_GITHUB_TOKEN:
        description: Token to handle other repositories and the current one (e.g. repo where Govdata is pushed to)
        required: false
      OPENCODE_TOKEN:
        description: Token to create and update repositories on OpenCode
        required: false
      NFDI4HEALTH_CLIENT_ID:
        description: client to connect to the NFDI4Health API
        required: false
      NFDI4HEALTH_CLIENT_SECRET:
        description: secret to connect toe the NFDI4Health API with the corresponding client
        required: false
      GH_TOKEN:
        description: current GH_TOKEN
        required: true
      GITHUB_METADATA_TOKEN:
        description: Github Token with rights to write repository metadata (administation)
        required: true
        
permissions:
  contents: write

#      OPENCODE_TOKEN:
#        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job creates a new release
  create_release:
    name: Create release on tag push
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
        uses: robert-koch-institut/OpenData-Workflows/Create_release_on_tag_push@main
        with:
          REF_NAME: ${{github.ref_name}}

  push_govdata:
    name: push ttl to GovData
    runs-on: ubuntu-latest
    if: ${{inputs.GOVDATA_ACTIVE}}
    steps:
      - name: run GovData Action

        uses: robert-koch-institut/OpenData-Workflows/Send_metadata_to_Govdata@main
        with:
          govdata_github_token: ${{secrets.GOVDATA_GITHUB_TOKEN}}
          destination_repo: ${{inputs.GOVDATA_DESTINATION_REPO}}
            
  # # Job syncs repository with OpenCoDE.de
  sync_to_open_code:
    name: Sync Github Open Data repository and its metadata to OpenCoDE.de
    runs-on: ubuntu-latest
    if: ${{ inputs.OPENCODE_ACTIVE }}
    steps:
     -  name: Sync Github Open Data repository
        uses: robert-koch-institut/OpenData-Workflows/Sync_OpenData_repo_to_OpenCoDE@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENCODE_TOKEN: ${{ secrets.OPENCODE_TOKEN }}
          GROUP_ID: ${{inputs.OPENCODE_GROUPID}}
          ACCESS_USER: ${{inputs.OPENCODE_ACCESS_USER}}
#          # REPO_PATH: The repository name must not start or end with a special character and must not contain consecutive special characters
          ZENODOJSON_PATH: ${{inputs.ZENODOJSON_PATH}}
          BRANCH: ${{inputs.OPENCODE_BRANCH}}
  
  push_to_nfdi4health:
    name: push metadata to nfdi4health studyhub
    runs-on: ubuntu-latest
    if: ${{ inputs.NFDI4HEALTH_ACTIVE }}
    steps:
      - name: push metadata
        uses: robert-koch-institut/OpenData-Workflows/Send_metadata_to_NFDI4Health@main
        with:
          nfdi4health_client_id: ${{secrets.NFDI4HEALTH_CLIENT_ID}}
          nfdi4health_client_secret: ${{secrets.NFDI4HEALTH_CLIENT_SECRET}}
          nfdi4health_metadata_path: ${{inputs.NFDI4HEALTH_METADATA_PATH}}
          nfdi4health_authorization_endpoint: ${{inputs.NFDI4HEALTH_AUTHORIZATION_ENDPOINT}}
          github_token: ${{secrets.GH_TOKEN}}
          nfdi4health_base_url: ${{inputs.NFDI4HEALTH_BASE_URL}}
          base_branch: ${{inputs.NFDI4HEALTH_BASE_BRANCH}}

#  # Job builds and deploys Open Data Website
  opendata-website:
    name: Build and deploy OpenData-Website
    #needs: create_release
    runs-on: ubuntu-latest
    if: ${{ inputs.WEBSITE_ACTIVE }}
    steps:
      - name: Bulid and deploy OpenData Website
        uses: robert-koch-institut/OpenData-Website@main
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

#  # Job copies the used tags into the Github About section as topics (i.e. labels/tags)
  update-github-repository-details :
    name: Update Github repository details weith zenodo.json metadata
    runs-on: ubuntu-latest
    if: ${{ inputs.GITHUB_DETAILS_ACTIVE }}
    steps:
      - name: Update Github repository details
        uses: robert-koch-institut/OpenData-Workflows/Update_details_on_Github@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ZENODOJSON_PATH: ${{inputs.ZENODOJSON_PATH}}
          GITHUB_METADATA_TOKEN: ${{ secrets.GITHUB_METADATA_TOKEN }}
          
