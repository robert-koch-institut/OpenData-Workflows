name: Update Github repository details 
description: "Updates the Github repository details from dataset metadata"

inputs:
  # Repository metadata
  REPO_PATH:
    description: "The repository name must not start or end with a special character and must not contain consecutive special characters"
    default: ${{ github.event.repository.name }}
    
  ZENODOJSON_PATH:
    description: "Path to Zenodo.json that contains the repository metadata"
    default: "Metadaten/zenodo.json"

  # Environment variables
  GITHUB_TOKEN:
    description: "Github Token"
    required: true
    
  GITHUB_METADATA_TOKEN:
    description: "Github metadata Token"
    required: true
    
runs:
  using: "composite"
  
  steps:
    - name: Get zenodo.json metadata from Github Open Data repository
      shell: bash
      run: |
         ZENODOJSON_URL=$(curl \
          --request GET https://api.github.com/repos/${{ github.repository }}/contents/${{ inputs.ZENODOJSON_PATH }} \
          --header "Authorization: token ${{ inputs.GITHUB_TOKEN }}" \
          --header "Accept: application/vnd.github.mercy-preview+json" \
          | jq -r '.download_url')

         # Process and add Zenodo metadata to environment
         KEYWORDS=$(curl -s $ZENODOJSON_URL | jq -c '{"names": (.keywords | map(gsub("ä"; "ae") | gsub("ö"; "oe") | gsub("ü"; "ue") | gsub(" "; "-") | ascii_downcase))}')
         DESCRIPTION=$(curl -s $ZENODOJSON_URL | jq -c '{"description": (.description | @text | gsub("<[^>]+>"; "") | gsub("\\n"; " ") | if length > 350 then .[:347] + "..." else . end)}')
         echo "TOPICS=$KEYWORDS" >> $GITHUB_ENV
         echo "DESCRIPTION=$DESCRIPTION" >> $GITHUB_ENV
         
    - name: Update GitHub topics and description
      shell: bash
      run: |
          # Update GitHub topics
          curl \
            -X PUT \
            --header 'Accept: application/vnd.github+json' \
            --header 'Authorization: Bearer ${{ inputs.GITHUB_METADATA_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }}/topics \
            -d "${TOPICS}"
            
          # Update GitHub description
          curl \
            -X PATCH \
            --header 'Accept: application/vnd.github+json' \
            --header 'Authorization: Bearer ${{ inputs.GITHUB_METADATA_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }} \
            -d "${DESCRIPTION}"
